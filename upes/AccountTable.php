<?php
namespace upes;

use itdq\DbTable;


/*
 * CREATE TABLE UPES_DEV.ACCOUNT ( ACCOUNT_ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY ( START WITH 1000 INCREMENT BY 10 NO CYCLE ), ACCOUNT CHAR(125) NOT NULL ) IN USERSPACE1;
 * CREATE TABLE UPES_UT.ACCOUNT ( ACCOUNT_ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY ( START WITH 1000 INCREMENT BY 10 NO CYCLE ), ACCOUNT CHAR(125) NOT NULL  ) IN USERSPACE1;
 * CREATE TABLE UPES.ACCOUNT ( ACCOUNT_ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY ( START WITH 1000 INCREMENT BY 10 NO CYCLE ), ACCOUNT CHAR(125) NOT NULL  ) IN USERSPACE1;
 *
 * ALTER TABLE UPES_DEV.ACCOUNT ADD CONSTRAINT ACC_ID_PK PRIMARY KEY (ACCOUNT_ID )  ENFORCED;
 * ALTER TABLE UPES_UT.ACCOUNT ADD CONSTRAINT ACC_ID_PK PRIMARY KEY (ACCOUNT_ID )  ENFORCED;
 * ALTER TABLE UPES.ACCOUNT ADD CONSTRAINT ACC_ID_PK PRIMARY KEY (ACCOUNT_ID )  ENFORCED;
 *
 * ALTER TABLE "UPES_DEV"."ACCOUNT" ADD CONSTRAINT "ACC_UNIQUE" UNIQUE ("ACCOUNT" ) ENFORCED;
 * ALTER TABLE "UPES_UT"."ACCOUNT" ADD CONSTRAINT "ACC_UNIQUE" UNIQUE ("ACCOUNT" ) ENFORCED;
 * ALTER TABLE "UPES"."ACCOUNT" ADD CONSTRAINT "ACC_UNIQUE" UNIQUE ("ACCOUNT" ) ENFORCED;

 *
 *
 *
 */


class AccountTable extends DbTable
{

    function returnAsArray($predicate=null,$withButtons=true){
        $sql  = " SELECT '' as ACTION, A.* ";
        $sql .= " FROM  " . $_SESSION['Db2Schema'] . "." . $this->tableName. " as A ";
        $sql .= " WHERE 1=1 " ;
        $sql .= !empty($predicate) ? " AND  $predicate " : null ;

        $resultSet = $this->execute($sql);
        $resultSet ? null : die("SQL Failed");
        $allData = null;

        while(($row = db2_fetch_assoc($resultSet))==true){
            $testJson = json_encode($row);
            if(!$testJson){
                die('Failed JSON Encode');
                break; // It's got invalid chars in it that will be a problem later.
            }
            if($withButtons){
                $this->addGlyphicons($row);
            }
            $allData[]  = $row;
        }
        return $allData ;
    }


    function addGlyphicons(&$row){
        $accountId = trim($row['ACCOUNT_ID']);
        $account   = trim($row['ACCOUNT']);

        $row['ACTION'] = "<button type='button' class='btn btn-primary btn-xs editAccountName ' aria-label='Left Align' data-accountid='" .$accountId . "' data-account='" . $account . "'  data-toggle='tooltip' title='Edit Account Name' >
              <span class='glyphicon glyphicon-edit editAccountName'  aria-hidden='true' data-accountid='" .$accountId . "' data-account='" . $account . "'   ></span>
              </button>";
        $row['ACTION'].= "&nbsp;";
        $row['ACTION'].= "<button type='button' class='btn btn-warning btn-xs deleteAccount ' aria-label='Left Align' data-accountid='" .$accountId . "' data-account='" . $account . "'   data-toggle='tooltip' title='Delete Account'>
              <span class='glyphicon glyphicon-trash deleteAccount' aria-hidden='true' data-accountid='" .$accountId . "' data-account='" . $account . "' ></span>
              </button>";
    }



}

